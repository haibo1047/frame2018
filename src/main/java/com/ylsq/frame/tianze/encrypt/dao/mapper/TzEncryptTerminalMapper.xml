<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ylsq.frame.tianze.encrypt.dao.mapper.TzEncryptTerminalMapper">
  <resultMap id="BaseResultMap" type="com.ylsq.frame.tianze.encrypt.dao.model.TzEncryptTerminal">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="login_id" jdbcType="VARCHAR" property="loginId" />
    <result column="guid" jdbcType="VARCHAR" property="guid" />
    <result column="terminal_status" jdbcType="INTEGER" property="terminalStatus" />
    <result column="terminal_name" jdbcType="VARCHAR" property="terminalName" />
    <result column="MAC" jdbcType="VARCHAR" property="mac" />
    <result column="last_login_time" jdbcType="TIMESTAMP" property="lastLoginTime" />
    <result column="IP" jdbcType="VARCHAR" property="ip" />
    <result column="version_num" jdbcType="VARCHAR" property="versionNum" />
    <result column="model_num" jdbcType="VARCHAR" property="modelNum" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="create_user" jdbcType="VARCHAR" property="createUser" />
    <result column="rec_status" jdbcType="INTEGER" property="recStatus" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, login_id, guid, terminal_status, terminal_name, MAC, last_login_time, IP, version_num, 
    model_num, update_time, create_time, create_user, rec_status
  </sql>
  <select id="selectByExample" parameterType="com.ylsq.frame.tianze.encrypt.dao.model.TzEncryptTerminalExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from tz_encrypt_terminal
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from tz_encrypt_terminal
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from tz_encrypt_terminal
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.ylsq.frame.tianze.encrypt.dao.model.TzEncryptTerminalExample">
    delete from tz_encrypt_terminal
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.ylsq.frame.tianze.encrypt.dao.model.TzEncryptTerminal">
    insert into tz_encrypt_terminal (id, login_id, guid, 
      terminal_status, terminal_name, MAC, 
      last_login_time, IP, version_num, 
      model_num, update_time, create_time, 
      create_user, rec_status)
    values (#{id,jdbcType=BIGINT}, #{loginId,jdbcType=VARCHAR}, #{guid,jdbcType=VARCHAR}, 
      #{terminalStatus,jdbcType=INTEGER}, #{terminalName,jdbcType=VARCHAR}, #{mac,jdbcType=VARCHAR}, 
      #{lastLoginTime,jdbcType=TIMESTAMP}, #{ip,jdbcType=VARCHAR}, #{versionNum,jdbcType=VARCHAR}, 
      #{modelNum,jdbcType=VARCHAR}, #{updateTime,jdbcType=TIMESTAMP}, #{createTime,jdbcType=TIMESTAMP}, 
      #{createUser,jdbcType=VARCHAR}, #{recStatus,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.ylsq.frame.tianze.encrypt.dao.model.TzEncryptTerminal">
    insert into tz_encrypt_terminal
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="loginId != null">
        login_id,
      </if>
      <if test="guid != null">
        guid,
      </if>
      <if test="terminalStatus != null">
        terminal_status,
      </if>
      <if test="terminalName != null">
        terminal_name,
      </if>
      <if test="mac != null">
        MAC,
      </if>
      <if test="lastLoginTime != null">
        last_login_time,
      </if>
      <if test="ip != null">
        IP,
      </if>
      <if test="versionNum != null">
        version_num,
      </if>
      <if test="modelNum != null">
        model_num,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="createUser != null">
        create_user,
      </if>
      <if test="recStatus != null">
        rec_status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="loginId != null">
        #{loginId,jdbcType=VARCHAR},
      </if>
      <if test="guid != null">
        #{guid,jdbcType=VARCHAR},
      </if>
      <if test="terminalStatus != null">
        #{terminalStatus,jdbcType=INTEGER},
      </if>
      <if test="terminalName != null">
        #{terminalName,jdbcType=VARCHAR},
      </if>
      <if test="mac != null">
        #{mac,jdbcType=VARCHAR},
      </if>
      <if test="lastLoginTime != null">
        #{lastLoginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="ip != null">
        #{ip,jdbcType=VARCHAR},
      </if>
      <if test="versionNum != null">
        #{versionNum,jdbcType=VARCHAR},
      </if>
      <if test="modelNum != null">
        #{modelNum,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUser != null">
        #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="recStatus != null">
        #{recStatus,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.ylsq.frame.tianze.encrypt.dao.model.TzEncryptTerminalExample" resultType="java.lang.Long">
    select count(*) from tz_encrypt_terminal
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update tz_encrypt_terminal
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.loginId != null">
        login_id = #{record.loginId,jdbcType=VARCHAR},
      </if>
      <if test="record.guid != null">
        guid = #{record.guid,jdbcType=VARCHAR},
      </if>
      <if test="record.terminalStatus != null">
        terminal_status = #{record.terminalStatus,jdbcType=INTEGER},
      </if>
      <if test="record.terminalName != null">
        terminal_name = #{record.terminalName,jdbcType=VARCHAR},
      </if>
      <if test="record.mac != null">
        MAC = #{record.mac,jdbcType=VARCHAR},
      </if>
      <if test="record.lastLoginTime != null">
        last_login_time = #{record.lastLoginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.ip != null">
        IP = #{record.ip,jdbcType=VARCHAR},
      </if>
      <if test="record.versionNum != null">
        version_num = #{record.versionNum,jdbcType=VARCHAR},
      </if>
      <if test="record.modelNum != null">
        model_num = #{record.modelNum,jdbcType=VARCHAR},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createUser != null">
        create_user = #{record.createUser,jdbcType=VARCHAR},
      </if>
      <if test="record.recStatus != null">
        rec_status = #{record.recStatus,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update tz_encrypt_terminal
    set id = #{record.id,jdbcType=BIGINT},
      login_id = #{record.loginId,jdbcType=VARCHAR},
      guid = #{record.guid,jdbcType=VARCHAR},
      terminal_status = #{record.terminalStatus,jdbcType=INTEGER},
      terminal_name = #{record.terminalName,jdbcType=VARCHAR},
      MAC = #{record.mac,jdbcType=VARCHAR},
      last_login_time = #{record.lastLoginTime,jdbcType=TIMESTAMP},
      IP = #{record.ip,jdbcType=VARCHAR},
      version_num = #{record.versionNum,jdbcType=VARCHAR},
      model_num = #{record.modelNum,jdbcType=VARCHAR},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      create_user = #{record.createUser,jdbcType=VARCHAR},
      rec_status = #{record.recStatus,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.ylsq.frame.tianze.encrypt.dao.model.TzEncryptTerminal">
    update tz_encrypt_terminal
    <set>
      <if test="loginId != null">
        login_id = #{loginId,jdbcType=VARCHAR},
      </if>
      <if test="guid != null">
        guid = #{guid,jdbcType=VARCHAR},
      </if>
      <if test="terminalStatus != null">
        terminal_status = #{terminalStatus,jdbcType=INTEGER},
      </if>
      <if test="terminalName != null">
        terminal_name = #{terminalName,jdbcType=VARCHAR},
      </if>
      <if test="mac != null">
        MAC = #{mac,jdbcType=VARCHAR},
      </if>
      <if test="lastLoginTime != null">
        last_login_time = #{lastLoginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="ip != null">
        IP = #{ip,jdbcType=VARCHAR},
      </if>
      <if test="versionNum != null">
        version_num = #{versionNum,jdbcType=VARCHAR},
      </if>
      <if test="modelNum != null">
        model_num = #{modelNum,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUser != null">
        create_user = #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="recStatus != null">
        rec_status = #{recStatus,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ylsq.frame.tianze.encrypt.dao.model.TzEncryptTerminal">
    update tz_encrypt_terminal
    set login_id = #{loginId,jdbcType=VARCHAR},
      guid = #{guid,jdbcType=VARCHAR},
      terminal_status = #{terminalStatus,jdbcType=INTEGER},
      terminal_name = #{terminalName,jdbcType=VARCHAR},
      MAC = #{mac,jdbcType=VARCHAR},
      last_login_time = #{lastLoginTime,jdbcType=TIMESTAMP},
      IP = #{ip,jdbcType=VARCHAR},
      version_num = #{versionNum,jdbcType=VARCHAR},
      model_num = #{modelNum,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      create_user = #{createUser,jdbcType=VARCHAR},
      rec_status = #{recStatus,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <cache type="org.mybatis.caches.ehcache.LoggingEhcache" />
</mapper>