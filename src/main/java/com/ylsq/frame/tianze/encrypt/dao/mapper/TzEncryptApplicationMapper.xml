<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ylsq.frame.tianze.encrypt.dao.mapper.TzEncryptApplicationMapper">
  <resultMap id="BaseResultMap" type="com.ylsq.frame.tianze.encrypt.dao.model.TzEncryptApplication">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="process_name" jdbcType="VARCHAR" property="processName" />
    <result column="application_type" jdbcType="INTEGER" property="applicationType" />
    <result column="process_path" jdbcType="VARCHAR" property="processPath" />
    <result column="encrypt_extension" jdbcType="VARCHAR" property="encryptExtension" />
    <result column="monitor_extension" jdbcType="VARCHAR" property="monitorExtension" />
    <result column="smart_extension" jdbcType="VARCHAR" property="smartExtension" />
    <result column="special_filename" jdbcType="VARCHAR" property="specialFilename" />
    <result column="special_path" jdbcType="VARCHAR" property="specialPath" />
    <result column="pe_path" jdbcType="VARCHAR" property="pePath" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="create_user" jdbcType="VARCHAR" property="createUser" />
    <result column="rec_status" jdbcType="INTEGER" property="recStatus" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, process_name, application_type, process_path, encrypt_extension, monitor_extension, 
    smart_extension, special_filename, special_path, pe_path, create_time, create_user, 
    rec_status
  </sql>
  <select id="selectByExample" parameterType="com.ylsq.frame.tianze.encrypt.dao.model.TzEncryptApplicationExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from tz_encrypt_application
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from tz_encrypt_application
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from tz_encrypt_application
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.ylsq.frame.tianze.encrypt.dao.model.TzEncryptApplicationExample">
    delete from tz_encrypt_application
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.ylsq.frame.tianze.encrypt.dao.model.TzEncryptApplication">
    insert into tz_encrypt_application (id, process_name, application_type, 
      process_path, encrypt_extension, monitor_extension, 
      smart_extension, special_filename, special_path, 
      pe_path, create_time, create_user, 
      rec_status)
    values (#{id,jdbcType=BIGINT}, #{processName,jdbcType=VARCHAR}, #{applicationType,jdbcType=INTEGER}, 
      #{processPath,jdbcType=VARCHAR}, #{encryptExtension,jdbcType=VARCHAR}, #{monitorExtension,jdbcType=VARCHAR}, 
      #{smartExtension,jdbcType=VARCHAR}, #{specialFilename,jdbcType=VARCHAR}, #{specialPath,jdbcType=VARCHAR}, 
      #{pePath,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{createUser,jdbcType=VARCHAR}, 
      #{recStatus,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.ylsq.frame.tianze.encrypt.dao.model.TzEncryptApplication">
    insert into tz_encrypt_application
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="processName != null">
        process_name,
      </if>
      <if test="applicationType != null">
        application_type,
      </if>
      <if test="processPath != null">
        process_path,
      </if>
      <if test="encryptExtension != null">
        encrypt_extension,
      </if>
      <if test="monitorExtension != null">
        monitor_extension,
      </if>
      <if test="smartExtension != null">
        smart_extension,
      </if>
      <if test="specialFilename != null">
        special_filename,
      </if>
      <if test="specialPath != null">
        special_path,
      </if>
      <if test="pePath != null">
        pe_path,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="createUser != null">
        create_user,
      </if>
      <if test="recStatus != null">
        rec_status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="processName != null">
        #{processName,jdbcType=VARCHAR},
      </if>
      <if test="applicationType != null">
        #{applicationType,jdbcType=INTEGER},
      </if>
      <if test="processPath != null">
        #{processPath,jdbcType=VARCHAR},
      </if>
      <if test="encryptExtension != null">
        #{encryptExtension,jdbcType=VARCHAR},
      </if>
      <if test="monitorExtension != null">
        #{monitorExtension,jdbcType=VARCHAR},
      </if>
      <if test="smartExtension != null">
        #{smartExtension,jdbcType=VARCHAR},
      </if>
      <if test="specialFilename != null">
        #{specialFilename,jdbcType=VARCHAR},
      </if>
      <if test="specialPath != null">
        #{specialPath,jdbcType=VARCHAR},
      </if>
      <if test="pePath != null">
        #{pePath,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUser != null">
        #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="recStatus != null">
        #{recStatus,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.ylsq.frame.tianze.encrypt.dao.model.TzEncryptApplicationExample" resultType="java.lang.Long">
    select count(*) from tz_encrypt_application
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update tz_encrypt_application
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.processName != null">
        process_name = #{record.processName,jdbcType=VARCHAR},
      </if>
      <if test="record.applicationType != null">
        application_type = #{record.applicationType,jdbcType=INTEGER},
      </if>
      <if test="record.processPath != null">
        process_path = #{record.processPath,jdbcType=VARCHAR},
      </if>
      <if test="record.encryptExtension != null">
        encrypt_extension = #{record.encryptExtension,jdbcType=VARCHAR},
      </if>
      <if test="record.monitorExtension != null">
        monitor_extension = #{record.monitorExtension,jdbcType=VARCHAR},
      </if>
      <if test="record.smartExtension != null">
        smart_extension = #{record.smartExtension,jdbcType=VARCHAR},
      </if>
      <if test="record.specialFilename != null">
        special_filename = #{record.specialFilename,jdbcType=VARCHAR},
      </if>
      <if test="record.specialPath != null">
        special_path = #{record.specialPath,jdbcType=VARCHAR},
      </if>
      <if test="record.pePath != null">
        pe_path = #{record.pePath,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createUser != null">
        create_user = #{record.createUser,jdbcType=VARCHAR},
      </if>
      <if test="record.recStatus != null">
        rec_status = #{record.recStatus,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update tz_encrypt_application
    set id = #{record.id,jdbcType=BIGINT},
      process_name = #{record.processName,jdbcType=VARCHAR},
      application_type = #{record.applicationType,jdbcType=INTEGER},
      process_path = #{record.processPath,jdbcType=VARCHAR},
      encrypt_extension = #{record.encryptExtension,jdbcType=VARCHAR},
      monitor_extension = #{record.monitorExtension,jdbcType=VARCHAR},
      smart_extension = #{record.smartExtension,jdbcType=VARCHAR},
      special_filename = #{record.specialFilename,jdbcType=VARCHAR},
      special_path = #{record.specialPath,jdbcType=VARCHAR},
      pe_path = #{record.pePath,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      create_user = #{record.createUser,jdbcType=VARCHAR},
      rec_status = #{record.recStatus,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.ylsq.frame.tianze.encrypt.dao.model.TzEncryptApplication">
    update tz_encrypt_application
    <set>
      <if test="processName != null">
        process_name = #{processName,jdbcType=VARCHAR},
      </if>
      <if test="applicationType != null">
        application_type = #{applicationType,jdbcType=INTEGER},
      </if>
      <if test="processPath != null">
        process_path = #{processPath,jdbcType=VARCHAR},
      </if>
      <if test="encryptExtension != null">
        encrypt_extension = #{encryptExtension,jdbcType=VARCHAR},
      </if>
      <if test="monitorExtension != null">
        monitor_extension = #{monitorExtension,jdbcType=VARCHAR},
      </if>
      <if test="smartExtension != null">
        smart_extension = #{smartExtension,jdbcType=VARCHAR},
      </if>
      <if test="specialFilename != null">
        special_filename = #{specialFilename,jdbcType=VARCHAR},
      </if>
      <if test="specialPath != null">
        special_path = #{specialPath,jdbcType=VARCHAR},
      </if>
      <if test="pePath != null">
        pe_path = #{pePath,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUser != null">
        create_user = #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="recStatus != null">
        rec_status = #{recStatus,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ylsq.frame.tianze.encrypt.dao.model.TzEncryptApplication">
    update tz_encrypt_application
    set process_name = #{processName,jdbcType=VARCHAR},
      application_type = #{applicationType,jdbcType=INTEGER},
      process_path = #{processPath,jdbcType=VARCHAR},
      encrypt_extension = #{encryptExtension,jdbcType=VARCHAR},
      monitor_extension = #{monitorExtension,jdbcType=VARCHAR},
      smart_extension = #{smartExtension,jdbcType=VARCHAR},
      special_filename = #{specialFilename,jdbcType=VARCHAR},
      special_path = #{specialPath,jdbcType=VARCHAR},
      pe_path = #{pePath,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      create_user = #{createUser,jdbcType=VARCHAR},
      rec_status = #{recStatus,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <cache type="org.mybatis.caches.ehcache.LoggingEhcache" />
</mapper>