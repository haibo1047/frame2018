<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ylsq.frame.tianze.encrypt.dao.mapper.TzStrategyEncryptMapper">
  <resultMap id="BaseResultMap" type="com.ylsq.frame.tianze.encrypt.dao.model.TzStrategyEncrypt">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="strategy_name" jdbcType="VARCHAR" property="strategyName" />
    <result column="allow_copy" jdbcType="INTEGER" property="allowCopy" />
    <result column="allow_screen" jdbcType="INTEGER" property="allowScreen" />
    <result column="allow_print" jdbcType="INTEGER" property="allowPrint" />
    <result column="watermark" jdbcType="INTEGER" property="watermark" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="create_user" jdbcType="VARCHAR" property="createUser" />
    <result column="rec_status" jdbcType="INTEGER" property="recStatus" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, strategy_name, allow_copy, allow_screen, allow_print, watermark, create_time, 
    create_user, rec_status
  </sql>
  <select id="selectByExample" parameterType="com.ylsq.frame.tianze.encrypt.dao.model.TzStrategyEncryptExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from tz_strategy_encrypt
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from tz_strategy_encrypt
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from tz_strategy_encrypt
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.ylsq.frame.tianze.encrypt.dao.model.TzStrategyEncryptExample">
    delete from tz_strategy_encrypt
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.ylsq.frame.tianze.encrypt.dao.model.TzStrategyEncrypt">
    insert into tz_strategy_encrypt (id, strategy_name, allow_copy, 
      allow_screen, allow_print, watermark, 
      create_time, create_user, rec_status
      )
    values (#{id,jdbcType=BIGINT}, #{strategyName,jdbcType=VARCHAR}, #{allowCopy,jdbcType=INTEGER}, 
      #{allowScreen,jdbcType=INTEGER}, #{allowPrint,jdbcType=INTEGER}, #{watermark,jdbcType=INTEGER}, 
      #{createTime,jdbcType=TIMESTAMP}, #{createUser,jdbcType=VARCHAR}, #{recStatus,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.ylsq.frame.tianze.encrypt.dao.model.TzStrategyEncrypt">
    insert into tz_strategy_encrypt
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="strategyName != null">
        strategy_name,
      </if>
      <if test="allowCopy != null">
        allow_copy,
      </if>
      <if test="allowScreen != null">
        allow_screen,
      </if>
      <if test="allowPrint != null">
        allow_print,
      </if>
      <if test="watermark != null">
        watermark,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="createUser != null">
        create_user,
      </if>
      <if test="recStatus != null">
        rec_status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="strategyName != null">
        #{strategyName,jdbcType=VARCHAR},
      </if>
      <if test="allowCopy != null">
        #{allowCopy,jdbcType=INTEGER},
      </if>
      <if test="allowScreen != null">
        #{allowScreen,jdbcType=INTEGER},
      </if>
      <if test="allowPrint != null">
        #{allowPrint,jdbcType=INTEGER},
      </if>
      <if test="watermark != null">
        #{watermark,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUser != null">
        #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="recStatus != null">
        #{recStatus,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.ylsq.frame.tianze.encrypt.dao.model.TzStrategyEncryptExample" resultType="java.lang.Long">
    select count(*) from tz_strategy_encrypt
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update tz_strategy_encrypt
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.strategyName != null">
        strategy_name = #{record.strategyName,jdbcType=VARCHAR},
      </if>
      <if test="record.allowCopy != null">
        allow_copy = #{record.allowCopy,jdbcType=INTEGER},
      </if>
      <if test="record.allowScreen != null">
        allow_screen = #{record.allowScreen,jdbcType=INTEGER},
      </if>
      <if test="record.allowPrint != null">
        allow_print = #{record.allowPrint,jdbcType=INTEGER},
      </if>
      <if test="record.watermark != null">
        watermark = #{record.watermark,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createUser != null">
        create_user = #{record.createUser,jdbcType=VARCHAR},
      </if>
      <if test="record.recStatus != null">
        rec_status = #{record.recStatus,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update tz_strategy_encrypt
    set id = #{record.id,jdbcType=BIGINT},
      strategy_name = #{record.strategyName,jdbcType=VARCHAR},
      allow_copy = #{record.allowCopy,jdbcType=INTEGER},
      allow_screen = #{record.allowScreen,jdbcType=INTEGER},
      allow_print = #{record.allowPrint,jdbcType=INTEGER},
      watermark = #{record.watermark,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      create_user = #{record.createUser,jdbcType=VARCHAR},
      rec_status = #{record.recStatus,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.ylsq.frame.tianze.encrypt.dao.model.TzStrategyEncrypt">
    update tz_strategy_encrypt
    <set>
      <if test="strategyName != null">
        strategy_name = #{strategyName,jdbcType=VARCHAR},
      </if>
      <if test="allowCopy != null">
        allow_copy = #{allowCopy,jdbcType=INTEGER},
      </if>
      <if test="allowScreen != null">
        allow_screen = #{allowScreen,jdbcType=INTEGER},
      </if>
      <if test="allowPrint != null">
        allow_print = #{allowPrint,jdbcType=INTEGER},
      </if>
      <if test="watermark != null">
        watermark = #{watermark,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUser != null">
        create_user = #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="recStatus != null">
        rec_status = #{recStatus,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ylsq.frame.tianze.encrypt.dao.model.TzStrategyEncrypt">
    update tz_strategy_encrypt
    set strategy_name = #{strategyName,jdbcType=VARCHAR},
      allow_copy = #{allowCopy,jdbcType=INTEGER},
      allow_screen = #{allowScreen,jdbcType=INTEGER},
      allow_print = #{allowPrint,jdbcType=INTEGER},
      watermark = #{watermark,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      create_user = #{createUser,jdbcType=VARCHAR},
      rec_status = #{recStatus,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <cache type="org.mybatis.caches.ehcache.LoggingEhcache" />
</mapper>